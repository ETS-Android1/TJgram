apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        defaultPublishConfig 'debug'
        applicationId "org.michaelbel.tjgram"
        versionCode 1
        versionName "1.0.0"
        project.ext.set("archivesBaseName", "tjgram-v" + versionName)
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
    
    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled true
            shrinkResources true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "market", "beta"

    productFlavors {
        releasing {
            flavorDimensions "market"
            minSdkVersion 19
            applicationId "org.michaelbel.tjgram"
        }

        developing {
            flavorDimensions "beta"
            // Для тестовых сборок 21 собирается быстрее.
            minSdkVersion 21
            applicationId "org.michaelbel.tjgram.beta"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    androidExtensions {
        experimental = true
    }

    dataBinding {
        enabled false
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE'
        exclude 'LICENSE.txt'
        exclude 'NOTICE'
        exclude 'NOTICE.txt'

        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/license/LICENSE.base64.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    lintOptions {
        //textOutput "stdout"
        //textReport true
        //checkAllWarnings true
        //warningsAsErrors true
        //showAll true
        //explainIssues true
        //abortOnError true
        //ignoreWarnings false
        //checkReleaseBuilds true
        //htmlReport true
        //xmlReport true
        //lintConfig file("$projectDir/lint.xml")
        //fatal 'StopShip'
        disable 'MissingTranslation'
        disable 'ExtraTranslation'
    }

    dexOptions {
        maxProcessCount 4
        preDexLibraries false
        javaMaxHeapSize "8g"
    }

    kapt {
        generateStubs = true
    }
}

configurations.all {
    resolutionStrategy {
        force "com.squareup.okhttp3:okhttp:3.5.0"
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

dependencies {
    implementation deps.kotlin.stdlib
    implementation deps.kotlin.reflect
    implementation deps.kotlin.coroutinesCore
    implementation deps.kotlin.coroutinesAndroid

    implementation deps.ktx.core
    implementation deps.ktx.fragment
    implementation deps.ktx.collection
    implementation deps.ktx.lifecycleViewModel

    implementation deps.anko.coroutines

    implementation deps.material
    implementation deps.appcompat
    implementation deps.cardview
    implementation deps.preference
    implementation deps.supportV4
    implementation deps.vectordrawable
    implementation deps.interpolator

    implementation deps.constraintlayout.runtime

    implementation deps.paging.common
    implementation deps.paging.runtime
    implementation deps.paging.rxjava2
    implementation deps.paging.ktx

    implementation deps.lifecycle.extensions
              kapt deps.lifecycle.compiler

    implementation deps.room.runtime
    implementation deps.room.rxjava2
              kapt deps.room.compiler

    implementation deps.dagger.runtime
              kapt deps.dagger.compiler

    implementation deps.retrofit.runtime
    implementation deps.retrofit.adapterRxJava2
    implementation deps.retrofit.gson

    implementation deps.rxkotlin
    implementation deps.rxandroid

    implementation deps.chuck
    implementation deps.zxing
    implementation deps.timber
    implementation deps.stetho
    implementation deps.traceur
    implementation deps.picasso
    implementation deps.sherlock
    implementation deps.jsonSimple
    implementation deps.leakCanary
    implementation deps.okhttpLoggingInterceptor
}